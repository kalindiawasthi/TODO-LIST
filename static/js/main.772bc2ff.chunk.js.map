{"version":3,"sources":["Components/List.jsx","Components/ListForm.jsx","Components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","list","handleToggle","className","map","i","id","onClick","event","complete","item","shortid","generate","ListForm","onHandleAddItem","onSubmit","htmlFor","type","placeholder","Date","now","name","rows","Todo","useState","setList","preventDefault","console","log","currentTarget","task","target","concat","value","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAeeA,MAdf,YAAmC,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,aAEhB,OACI,gCACA,sCACA,oBAAIC,UAAU,8BAAd,SACMF,EAAKG,KAAI,SAACC,GAAD,OACX,qBAAIF,UAAW,qEAAgGG,GAAMD,EAAEC,GAAIC,QAAW,SAACC,GAAD,OAAWN,EAAaM,IAA9J,cAAyKH,EAAEI,SAAW,8BAAMJ,EAAEK,OAAcL,EAAEK,KAA9M,MAA2FC,IAAQC,qBCahGC,MArBf,YAAqC,IAAlBC,EAAiB,EAAjBA,gBAEf,OAEI,uBAAMX,UAAU,kDAAkDY,SAAY,SAACP,GAAD,OAAWM,EAAgBN,IAAzG,UACA,sBAAKL,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAkBa,QAAQ,OAA3C,SAAkD,4CAClD,qBAAKb,UAAU,cAAf,SAEI,uBAAOc,KAAK,OAAOd,UAAU,eAAgBe,YAAY,iBAAiBZ,GAAIa,KAAKC,MAAOC,KAAO,OAAQC,KAAK,WAItH,qBAAKnB,UAAU,gBAAf,SACI,wBAAQc,KAAK,SAASd,UAAU,kBAAhC,4BCyBGoB,MAlCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAQvB,EAAR,KAAawB,EAAb,KAuBE,OACI,gCACI,4CACA,cAAC,EAAD,CAAQxB,KAAQA,EAAMC,aAlB9B,SAA8BM,GAC1BA,EAAMkB,iBACNC,QAAQC,IAAIpB,EAAMqB,cAAcvB,IAE9BmB,EAAQxB,EAAKG,KAAI,SAAA0B,GACf,OAAOA,EAAKxB,KAAOE,EAAMqB,cAAcvB,GAAhC,2BAA0CwB,GAA1C,IAAgDrB,UAAWqB,EAAKrB,WAAhE,eAAkFqB,OAE3FH,QAAQC,IAAI3B,MAYV,cAAC,EAAD,CAAYa,gBAzBpB,SAAuBN,GACnBmB,QAAQC,IAAIpB,EAAMuB,OAAOrB,KAAKJ,IAC9BE,EAAMkB,iBACND,EAAQxB,EAAK+B,OAAO,CAAC1B,GAAIE,EAAMuB,OAAOrB,KAAKJ,GAAII,KAAKF,EAAMuB,OAAOrB,KAAKuB,MAAMxB,UAAS,KACrFkB,QAAQC,IAAI3B,MAkBZ,IAGqD,uBACjD,wBAAQE,UAAU,kBAAkBI,QAX5C,WACIkB,EAAQxB,EAAKiC,QAAO,SAASJ,GACzB,OAAyB,IAAlBA,EAAKrB,cASZ,sC,MCvBG0B,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSiC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.772bc2ff.chunk.js","sourcesContent":["import shortid from 'shortid';\nfunction List({list,handleToggle}){\n    \n    return(\n        <div>\n        <h4>list</h4>\n        <ul className=\"list-group list-group-flush\">\n            { list.map((i) => \n            <li className= \"list-group-item d-flex justify-content-between align-items-center \" key = {shortid.generate()} id = {i.id} onClick = {(event) => handleToggle(event)}> { i.complete ? <del>{i.item}</del> : i.item } </li>\n            )}\n        </ul>\n        </div>\n    )\n}\n\nexport default List","function ListForm({onHandleAddItem}){\n    \n    return(\n        \n        <form className=\"row row-cols-lg-auto g-3 justify-content-center\" onSubmit = {(event) => onHandleAddItem(event)} >\n        <div className=\"col-4\">\n            <label className=\"visually-hidden\" htmlFor=\"task\"><h3>Add task</h3></label>\n            <div className=\"input-group\">\n  \n                <input type=\"text\" className=\"form-control\"  placeholder=\"Enter task ...\" id={Date.now()} name = 'item'  rows=\"1\" />\n            </div>\n\n        </div>\n        <div className=\"col-3 mt-auto\">\n            <button type=\"submit\" className=\"btn btn-primary\">Add Task</button>\n        </div>\n        \n         </form>\n    \n    )\n}\nexport default ListForm","import { useState } from 'react'\nimport List from './List.jsx'\nimport ListForm from './ListForm.jsx'\n\n\nfunction Todo(){\n  const  [list,setList] = useState([])\n    \n    function handleAddItem(event){\n        console.log(event.target.item.id)\n        event.preventDefault()\n        setList(list.concat({id: event.target.item.id ,item:event.target.item.value,complete:false}))\n        console.log(list)\n    }\n    function toggleCompleteStatus(event){\n        event.preventDefault()\n        console.log(event.currentTarget.id)\n       \n          setList(list.map(task => {\n            return task.id === event.currentTarget.id ? { ...task, complete: !task.complete } : { ...task};\n          }));\n          console.log(list)\n    }\n    function deleteItems(){\n        setList(list.filter(function(task){\n            return task.complete === false\n        }))\n        \n    }\n    return(\n        <div>\n            <h3>TO DO LIST</h3>\n            <List   list = {list} handleToggle = {toggleCompleteStatus}/>\n            <ListForm   onHandleAddItem = {handleAddItem} /> <br/>\n            <button className=\"btn btn-primary\" onClick = {deleteItems}>Clear Completed Task</button>\n        </div>\n    )\n}\n\nexport default Todo;\n","import Todo from './Components/Todo.jsx'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}